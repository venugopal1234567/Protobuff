syntax = "proto3";

package greet;
option go_package="greetpb";

message Greeting {
    string first_name = 1;
    string last_name = 2;
}

message GreetRequest {
    Greeting greeting = 1;
}

message GreetResponse {
    string message = 1;
}

message GreetManyTimesRequest{
    Greeting greeting = 1;
}

message GreetManyTimesResponse{
    string message = 1;
}

message LongGreetRequest {
    Greeting greeting = 1;
}

message LongGreetResponse{
    string message = 1;
}

message GreetEveryOneRequest {
    Greeting greeting = 1;
}

message GreetEveryOneResponse {
    string message = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

message GreetWithDeadlineRequest {
    Greeting greeting = 1;
}

message GreetWithDeadlineResponse {
    string message = 1;
}
service GreetService {
  //Unary
  rpc Greet(GreetRequest) returns (GreetResponse){};

  //Server Streaming
  rpc GreetManyTimes(GreetManyTimesRequest) returns (stream GreetManyTimesResponse){};

  rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse){};

  rpc GreetEveryOne(stream GreetEveryOneRequest) returns (stream GreetEveryOneResponse){};

  //error handling
  //this rpc will throw errror when number is negative
  //the error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse){};

  // Unary with Deadline
  rpc GreetWithDeadline(GreetWithDeadlineRequest) returns (GreetWithDeadlineResponse){};
}